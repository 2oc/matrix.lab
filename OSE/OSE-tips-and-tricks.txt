# MISC
#oc create -f /usr/share/openshift/examples/image-streams/image-streams-rhel7.json -n openshift
#oc create -f /usr/share/openshift/examples/db-templates -n openshift
#oc create -f /usr/share/openshift/examples/quickstart-templates -n openshift

# Setting a default route (probably not necessary)
sed -i "s/router.default.local/cloudapps-${GUID}.oslab.opentlc.com/g" /etc/openshift/master/master-config.yaml
systemctl restart openshift-master

# Review logs
journalctl -f -u openshift-master
journalctl -f -u openshift-node

# Registry with Fixed IP
cat << EOF > registry_fixedIP.sh
#!/bin/bash

REGISTRY_IP=172.30.0.2
TMPFILE=$(mktemp)

oc get svc docker-registry -n default -o yaml | sed -re "/(cluster|portal)IP:/s/:\s+[0-9.]+$/: ${REGISTRY_IP}/" > $TMPFILE || exit 1
# Have to use delete/create since IP address is immutable attribute
oc delete svc docker-registry -n default
oc create -f $TMPFILE

rm -f $TMPFILE

systemctl restart atomic-openshift-master.service

echo "Please restart other OpenShift Masters"

exit 0
EOF

# REMOVE ALL REGISTRY ENTRIES
  #for resource in service deploymentConfig pod route serviceaccount secret rc; do
  for resource in service deploymentConfig pod route rc; do
    resource_names=$(oc get $resource | awk '/router/ {print $1}')
    for name in ${resource_names/'\n'/ }; do
      echo "oc delete $resource $name"
      oc delete $resource $name
    done
  done

# Setting a default node (no idea why though?)
sed -i 's/defaultNodeSelector: ""/defaultNodeSelector: "region=primary"' /etc/openshift/master/master-config.yaml
systemctl restart openshift-master

# ugg...
# ERROR: fd02f32d9022: Error pulling image (latest) from docker.io/openshift/hello-openshift, Driver devicemapper failed to create image rootfs 3d8b115ccd046adf638166a337b6ebe8ad2a
# DO NOT STOP DOCKER
rm -rf /var/lib/docker/*
REGISTRY="registry.access.redhat.com"; PTH="openshift3"
REGISTRY="rh7sat6.matrix.lab"; PTH="openshift3"
IMAGES="ose-haproxy-router:v3.0.0.1
ose-deployer:v3.0.0.1
ose-sti-builder:v3.0.0.1
ose-sti-image-builder:v3.0.0.1
ose-docker-builder:v3.0.0.1
ose-pod:v3.0.0.1
ose-keepalived-ipfailover:v3.0.0.1
ruby-20-rhel7
mysql-55-rhel7
hello-openshift:v0.4.3
ose-docker-registry:v3.0.2.0"
for IMG in $IMAGES; do echo "\"docker pull "$REGISTRY/$PTH/${IMG}\""; docker pull "$REGISTRY/$PTH/${IMG}"; done

# CLEANUP (REMOVE) PROJECT OBJECTS
oc project <project name>
oc delete all --all

# Check ETCD health
etcdctl -C \
   https://rh7osetcd01.matrix.lab:2379,https://rh7osetcd02.matrix.lab:2379,https://rh7osetcd03.matrix.lab:2379 \
   --ca-file=/etc/etcd/generated_certs/openshift-master-rh7osemst01.matrix.lab/master.etcd-ca.crt \
   --cert-file=/etc/etcd/generated_certs/openshift-master-rh7osemst01.matrix.lab/master.etcd-client.crt \
   --key-file=/etc/etcd/generated_certs/openshift-master-rh7osemst01.matrix.lab//master.etcd-client.key cluster-health

# If you manage to log yourself out of the default project
oc login -u system:admin -n default

# Download OC
https://access.redhat.com/downloads/content/290/ver=3.1/rhel---7/3.1.0.4/x86_64/product-software

# Test whether registry is available
curl -vk 172.30.211.112:5000/v2

# Using Curl (and faking the hostname header)
curl -H 'Host: blah.fake.domain.com' http://10.10.10.135

# To add SNI to the openssl command
openssl s_client -connect host:port -servername host

# Grab the Cert
$HOSTNAME=myhost.example.private
echo | openssl s_client -connect ${HOSTNAME}:443 | sed -n /BEGIN/,/END/p > ${HOSTNAME}

#  Region and Zone explained
#  Think of region like a data center (Affinity)
#           zone is a rack (Anti-Affinity)
#  You would want an app to run in a single datacenter (region)
#     but you would want them to run in different racks  (zone)

# Import example templates/imagestreams
cd /usr/share/openshift/examples
find . -name "*.json" -exec oc create -f {} \;

curl -x localhost:3128 https://registry.access.redhat.com/v1/_ping

